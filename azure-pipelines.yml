trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  group: 'phoramodel'

stages:
### 1. Build Stage ###
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Set up and Install Dependencies'
    steps:
    - checkout: self

    - script: |
        echo "ðŸ§± Setting up virtual environment"
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
      displayName: 'Create venv and Install Dependencies'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true
      displayName: 'Archive project files'

    - publish: '$(Build.ArtifactStagingDirectory)/app.zip'
      artifact: appPackage


### 2. Test Stage ###
- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build
  jobs:
  - job: TestJob
    displayName: 'Run Django Unit Tests'
    steps:
    - checkout: self

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
      displayName: 'Set up test environment'

    - script: |
        source venv/bin/activate
        export SECRET_KEY='${SECRET_KEY}'
        export DEBUG=False
        export ALLOWED_HOSTS='${ALLOWED_HOSTS}'
        python manage.py test
      displayName: 'Run Django Tests'


### 3. Deploy Stage ###
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Deploy to Azure'
    steps:
    - download: current
      artifact: appPackage

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
      displayName: 'Prepare environment for Django'

    - script: |
        source venv/bin/activate
        export SECRET_KEY='${SECRET_KEY}'
        export DEBUG=False
        export ALLOWED_HOSTS='${ALLOWED_HOSTS}'
        echo "Running Django migrations & collectstatic"
        python manage.py migrate --noinput
        python manage.py collectstatic --noinput
      displayName: 'Migrate DB & Collect Static Files'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'phora-api-service-connection'
        appType: 'webAppLinux'
        appName: 'phora-model-backend-api'
        package: '$(Pipeline.Workspace)/appPackage/app.zip'
        runtimeStack: 'PYTHON|3.11'
      displayName: 'Deploy to Azure Web App'
