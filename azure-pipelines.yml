# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: SECRET_KEY
    value: 'gzsudgfud'
  - name: ALLOWED_HOSTS
    value: '*'
    
steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
    python -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
  displayName: 'Set up virtual environment and install dependencies'

- script: |
    source venv/bin/activate
    export SECRET_KEY=$(SECRET_KEY)
    export DEBUG=False
    export ALLOWED_HOSTS=$(ALLOWED_HOSTS)
    if [ -z "$SECRET_KEY" ]; then echo "SECRET_KEY is missing ðŸ˜¬"; else echo "SECRET_KEY is set âœ…"; fi
    python manage.py migrate --noinput
    python manage.py collectstatic --noinput
  displayName: 'Django migrations & collectstatic'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Archive project files'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'phora-api-service-connection'
    appType: 'webAppLinux'
    appName: 'phora-model-backend-api'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
    runtimeStack: 'PYTHON|3.11'  # or your actual runtime
  displayName: 'Deploy to Azure Web App'
